# patches the original (Python2) nicotine to print debugging messages
#
# Usage examples:
# docker build -t nicotine -f docker/Dockerfile.python2 .
# docker run --net=host --env="DISPLAY" --volume="$HOME/.Xauthority:/root/.Xauthority:rw" -t nicotine
# docker exec -it <ID> ptpython
# docker exec -it -e DISPLAY=$DISPLAY <ID> xfce4-terminal

FROM ubuntu:18.04

RUN apt-get update
RUN apt-get install -y software-properties-common
RUN add-apt-repository -y ppa:nicotine-team/stable
RUN apt-get install -y nicotine xfce4-terminal

COPY docker/config /root/.nicotine

ENV slskproto="/usr/lib/python2.7/dist-packages/pynicotine/slskproto.py"
# run()
RUN sed -i '/if connection in conns and len(conns\[connection\].ibuf) > 0:/a\\
\t\t\t\t\tprint "********    ibuf: ", conns[connection].ibuf' $slskproto
# writeData()
RUN sed -i '/def writeData(self, server_socket, conns, i):/a\\
\t\tprint "********writing", conns[i].obuf' $slskproto
# readData()
RUN sed -i '/data = i.recv(conns[i].lastreadlength)/a\\
\t\t\tprint "********readData {} into {}".format(data[:200], conns[i].ibuf[:200])' $slskproto
# process_queue()
RUN sed -i '/msgList.append(queue.get())/a\\
\t\tprint "********queue:", msgList' $slskproto
RUN sed -i '/\t\t\t\t\tif server_socket in conns:/a\\
\t\t\t\t\t\tprint "********      msg:", msg[:200]' $slskproto

ENV DISPLAY=:0
CMD nicotine || sleep 100000

